import{R as S}from"./react93573.js";import{u as g}from"./use-sync-external-store93573.js";const _={BASE_URL:"/github-repos/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_API_BASE_URL:"https://api.github.com/graphql"},a=t=>{let e;const o=new Set,s=(n,c)=>{const r=typeof n=="function"?n(e):n;if(!Object.is(r,e)){const f=e;e=c??(typeof r!="object"||r===null)?r:Object.assign({},e,r),o.forEach(E=>E(e,f))}},i=()=>e,u={setState:s,getState:i,getInitialState:()=>b,subscribe:n=>(o.add(n),()=>o.delete(n)),destroy:()=>{(_?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),o.clear()}},b=e=t(s,i,u);return u},m=t=>t?a(t):a,p={BASE_URL:"/github-repos/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_API_BASE_URL:"https://api.github.com/graphql"},{useDebugValue:h}=S,{useSyncExternalStoreWithSelector:y}=g;let l=!1;const v=t=>t;function D(t,e=v,o){(p?"production":void 0)!=="production"&&o&&!l&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),l=!0);const s=y(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,o);return h(s),s}const d=t=>{(p?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?m(t):t,o=(s,i)=>D(e,s,i);return Object.assign(o,e),o},O=t=>t?d(t):d;export{O as c};
