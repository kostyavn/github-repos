import{R as S}from"./react95604.js";import{u as f}from"./use-sync-external-store95604.js";const g={BASE_URL:"/github-repos/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_API_BASE_URL:"https://api.github.com/graphql",VITE_API_TOKEN:"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"},a=t=>{let e;const o=new Set,s=(n,c)=>{const i=typeof n=="function"?n(e):n;if(!Object.is(i,e)){const b=e;e=c??(typeof i!="object"||i===null)?i:Object.assign({},e,i),o.forEach(_=>_(e,b))}},r=()=>e,u={setState:s,getState:r,getInitialState:()=>E,subscribe:n=>(o.add(n),()=>o.delete(n)),destroy:()=>{(g?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),o.clear()}},E=e=t(s,r,u);return u},m=t=>t?a(t):a,p={BASE_URL:"/github-repos/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_API_BASE_URL:"https://api.github.com/graphql",VITE_API_TOKEN:"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"},{useDebugValue:h}=S,{useSyncExternalStoreWithSelector:T}=f;let l=!1;const v=t=>t;function y(t,e=v,o){(p?"production":void 0)!=="production"&&o&&!l&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),l=!0);const s=T(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,o);return h(s),s}const d=t=>{(p?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?m(t):t,o=(s,r)=>y(e,s,r);return Object.assign(o,e),o},U=t=>t?d(t):d;export{U as c};
